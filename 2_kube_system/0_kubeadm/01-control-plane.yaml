- name: Bootstrap Kubernetes control-plane using kubeadm
  hosts: control
  become: yes
  tasks:
    - name: Copy generate_kubevip_manifests.sh to all nodes
      copy:
        src: ./generate_kubevip_manifests.sh
        dest: /tmp/generate_kubevip_manifests.sh
        mode: "0755"

    - name: Generate kube-vip manifest and save it to /etc/kubernetes/manifests/kube-vip.yaml
      shell: |
        mkdir -p /etc/kubernetes/manifests &&
        bash /tmp/generate_kubevip_manifests.sh | tee /etc/kubernetes/manifests/kube-vip.yaml

    - name: Clean up generate_kubevip_manifests.sh
      file:
        path: /tmp/generate_kubevip_manifests.sh
        state: absent

    - name: Ensure kubeadm patches
      file:
        path: /root/kubeadm-patches
        state: directory
        mode: "0755"

    - name: Insert kubeletconfiguration patch
      template:
        src: ./kubeadm/kubeletconfiguration0+strategic.yaml.j2
        dest: /root/kubeadm-patches/kubeletconfiguration0+strategic.yaml
        mode: "0644"

    # Used as a workaround for issue <https://github.com/kube-vip/kube-vip/issues/684>
    - name: Use super-admin on master node
      shell: |
        sed -i 's#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#' \
          /etc/kubernetes/manifests/kube-vip.yaml
      when: inventory_hostname == "xcat"

    - name: Copy kubeadm init configuration file to master node
      copy:
        src: ./kubeadm/init-config.yaml
        dest: /root/init-config.yaml
        mode: "0644"
      when: inventory_hostname == "xcat"

    - name: Initialize Kubernetes master node using the configuration file
      command: kubeadm init --config=/root/init-config.yaml --upload-certs
      when: inventory_hostname == "xcat"
      register: kubeadm_init

    - name: Revert kube-vip to use admin on master node
      shell: |
        sed -i 's#path: /etc/kubernetes/super-admin.conf#path: /etc/kubernetes/admin.conf#' \
          /etc/kubernetes/manifests/kube-vip.yaml && systemctl restart kubelet
      when: inventory_hostname == "xcat"

    - name: Save kubeadm join command
      copy:
        content: "{{ kubeadm_init.stdout_lines[-2] ~ '\n' ~ kubeadm_init.stdout_lines[-1] }}"
        dest: /tmp/kubeadm_join.sh
        mode: "0755"
      when: inventory_hostname == "xcat"

    - name: Clean up kubeadm init configuration file
      file:
        path: /root/init-config.yaml
        state: absent
      when: inventory_hostname == "xcat"

    - name: Clean up kubeadm patches
      file:
        path: /root/kubeadm-patches
        state: absent

    # - name: Extract token and CA hash from output
    #   set_fact:
    #     kubeadm_join_token: "{{ kubeadm_init.stdout | regex_search('kubeadm join .* --token (\\S+)') }}"
    #     kubeadm_join_ca_hash: "{{ kubeadm_init.stdout | regex_search('--discovery-token-ca-cert-hash (\\S+)') }}"
